"use strict";(self.webpackChunksea_ql_blog=self.webpackChunksea_ql_blog||[]).push([[7034],{9680:(t,a,e)=>{e.d(a,{Zo:()=>m,kt:()=>h});var r=e(6687);function n(t,a,e){return a in t?Object.defineProperty(t,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[a]=e,t}function o(t,a){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable}))),e.push.apply(e,r)}return e}function s(t){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?o(Object(e),!0).forEach((function(a){n(t,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(a){Object.defineProperty(t,a,Object.getOwnPropertyDescriptor(e,a))}))}return t}function i(t,a){if(null==t)return{};var e,r,n=function(t,a){if(null==t)return{};var e,r,n={},o=Object.keys(t);for(r=0;r<o.length;r++)e=o[r],a.indexOf(e)>=0||(n[e]=t[e]);return n}(t,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)e=o[r],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(n[e]=t[e])}return n}var l=r.createContext({}),c=function(t){var a=r.useContext(l),e=a;return t&&(e="function"==typeof t?t(a):s(s({},a),t)),e},m=function(t){var a=c(t.components);return r.createElement(l.Provider,{value:a},t.children)},p={inlineCode:"code",wrapper:function(t){var a=t.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(t,a){var e=t.components,n=t.mdxType,o=t.originalType,l=t.parentName,m=i(t,["components","mdxType","originalType","parentName"]),u=c(e),h=n,k=u["".concat(l,".").concat(h)]||u[h]||p[h]||o;return e?r.createElement(k,s(s({ref:a},m),{},{components:e})):r.createElement(k,s({ref:a},m))}));function h(t,a){var e=arguments,n=a&&a.mdxType;if("string"==typeof t||n){var o=e.length,s=new Array(o);s[0]=u;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=t,i.mdxType="string"==typeof t?t:n,s[1]=i;for(var c=2;c<o;c++)s[c]=e[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,e)}u.displayName="MDXCreateElement"},6179:(t,a,e)=>{e.r(a),e.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=e(1308),n=(e(6687),e(9680));const o={slug:"2024-03-28-whats-new-in-seaorm-1.0.0-rc.x",title:"What's new in SeaORM 1.0.0-rc.x",author:"SeaQL Team",author_title:"Chris Tsang",author_url:"https://github.com/SeaQL",author_image_url:"https://www.sea-ql.org/blog/img/SeaQL.png",tags:["news"]},s=void 0,i={permalink:"/preview/pr-118/blog/2024-03-28-whats-new-in-seaorm-1.0.0-rc.x",editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/Blog/blog/2024-03-28-whats-new-in-seaorm-1.0.0-rc.x.md",source:"@site/blog/2024-03-28-whats-new-in-seaorm-1.0.0-rc.x.md",title:"What's new in SeaORM 1.0.0-rc.x",description:"Celebrating 2.6M downloads on crates.io \ud83d\udce6",date:"2024-03-28T00:00:00.000Z",formattedDate:"March 28, 2024",tags:[{label:"news",permalink:"/preview/pr-118/blog/tags/news"}],readingTime:4.945,hasTruncateMarker:!1,authors:[{name:"SeaQL Team",title:"Chris Tsang",url:"https://github.com/SeaQL",imageURL:"https://www.sea-ql.org/blog/img/SeaQL.png"}],frontMatter:{slug:"2024-03-28-whats-new-in-seaorm-1.0.0-rc.x",title:"What's new in SeaORM 1.0.0-rc.x",author:"SeaQL Team",author_title:"Chris Tsang",author_url:"https://github.com/SeaQL",author_image_url:"https://www.sea-ql.org/blog/img/SeaQL.png",tags:["news"]},nextItem:{title:"What's new in SeaORM 0.12.x",permalink:"/preview/pr-118/blog/2024-01-23-whats-new-in-seaorm-0.12.x"}},l={authorsImageUrls:[void 0]},c=[{value:"Celebrating 2.6M downloads on crates.io \ud83d\udce6",id:"celebrating-26m-downloads-on-cratesio-",level:2},{value:"New Features",id:"new-features",level:2},{value:"Migration Schema Helper",id:"migration-schema-helper",level:3},{value:"Enhancements",id:"enhancements",level:2},{value:"Breaking Changes",id:"breaking-changes",level:2},{value:"Upgrades",id:"upgrades",level:2},{value:"House Keeping",id:"house-keeping",level:2},{value:"Release planning",id:"release-planning",level:2},{value:"Sponsor",id:"sponsor",level:2},{value:"Gold Sponsors",id:"gold-sponsors",level:4},{value:"GitHub Sponsors",id:"github-sponsors",level:4},{value:"Rustacean Sticker Pack \ud83e\udd80",id:"rustacean-sticker-pack-",level:2}],m={toc:c};function p(t){let{components:a,...e}=t;return(0,n.kt)("wrapper",(0,r.Z)({},m,e,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"celebrating-26m-downloads-on-cratesio-"},"Celebrating 2.6M downloads on crates.io \ud83d\udce6"),(0,n.kt)("p",null,"We've just reached the milestone of 2,600,000 all time downloads on ",(0,n.kt)("a",{parentName:"p",href:"https://crates.io/crates/sea-orm"},"crates.io"),". It's a testament to SeaORM's adoption in professional use. Thank you to all our users for your trust and for being a part of our community."),(0,n.kt)("h2",{id:"new-features"},"New Features"),(0,n.kt)("h3",{id:"migration-schema-helper"},"Migration Schema Helper"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-orm/pull/2099"},"#2099")," Schema helpers were added to the migration. Using shorthand to define common column types, there are three variants for each common column types:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<COLUMN_TYPE>()")," helper function, e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"string()"),", define a non-null string column"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<COLUMN_TYPE>_null()")," helper function, e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"string_null()"),", define a nullable string column"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<COLUMN_TYPE>_uniq()")," helper function, e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"string_uniq()"),", define a non-null and unique string column")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"// Remember to import `sea_orm_migration::schema::*`\nuse sea_orm_migration::{prelude::*, schema::*};\n\n#[derive(DeriveMigrationName)]\npub struct Migration;\n\n#[async_trait::async_trait]\nimpl MigrationTrait for Migration {\n    async fn up(&self, manager: &SchemaManager) -> Result<(), DbErr> {\n        manager\n            .create_table(\n                Table::create()\n                    .table(Users::Table)\n                    .if_not_exists()\n                    .col(pk_auto(Users::Id)) // Primary key with auto-increment\n                    .col(uuid(Users::Pid)) // UUID column\n                    .col(string_uniq(Users::Email)) // String column with unique and not null constraint\n                    .col(string(Users::Password)) // String column\n                    .col(string(Users::ApiKey).unique_key())\n                    .col(string(Users::Name))\n                    .col(string_null(Users::ResetToken)) // Nullable string column\n                    .col(timestamp_null(Users::ResetSentAt)) // Nullable timestamp column\n                    .col(string_null(Users::EmailVerificationToken))\n                    .col(timestamp_null(Users::EmailVerificationSentAt))\n                    .col(timestamp_null(Users::EmailVerifiedAt))\n                    .to_owned(),\n            )\n            .await\n    }\n\n    // ...\n}\n")),(0,n.kt)("h2",{id:"enhancements"},"Enhancements"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-orm/pull/2137"},"#2137")," ",(0,n.kt)("inlineCode",{parentName:"li"},"DerivePartialModel")," macro attribute ",(0,n.kt)("inlineCode",{parentName:"li"},"entity")," now supports ",(0,n.kt)("inlineCode",{parentName:"li"},"syn::Type"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},'#[derive(DerivePartialModel)]\n#[sea_orm(entity = "<entity::Model as ModelTrait>::Entity")]\nstruct EntityNameNotAIdent {\n    #[sea_orm(from_col = "foo2")]\n    _foo: i32,\n    #[sea_orm(from_col = "bar2")]\n    _bar: String,\n}\n')),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-orm/pull/2146"},"#2146")," Added ",(0,n.kt)("inlineCode",{parentName:"li"},"RelationDef::from_alias()"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},'assert_eq!(\n    cake::Entity::find()\n        .join_as(\n            JoinType::LeftJoin,\n            cake_filling::Relation::Cake.def().rev(),\n            cf.clone()\n        )\n        .join(\n            JoinType::LeftJoin,\n            cake_filling::Relation::Filling.def().from_alias(cf)\n        )\n        .build(DbBackend::MySql)\n        .to_string(),\n    [\n        "SELECT `cake`.`id`, `cake`.`name` FROM `cake`",\n        "LEFT JOIN `cake_filling` AS `cf` ON `cake`.`id` = `cf`.`cake_id`",\n        "LEFT JOIN `filling` ON `cf`.`filling_id` = `filling`.`id`",\n    ]\n    .join(" ")\n);\n')),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-orm/pull/1665"},"#1665")," ","[sea-orm-macro]"," Qualify traits in ",(0,n.kt)("inlineCode",{parentName:"li"},"DeriveActiveModel")," macro"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-orm/pull/2064"},"#2064")," ","[sea-orm-cli]"," Fix ",(0,n.kt)("inlineCode",{parentName:"li"},"migrate generate")," on empty ",(0,n.kt)("inlineCode",{parentName:"li"},"mod.rs")," files")),(0,n.kt)("h2",{id:"breaking-changes"},"Breaking Changes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-orm/pull/2088"},"#2088")," Updated Strum to version 0.26"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-orm/pull/2145"},"#2145")," Renamed ",(0,n.kt)("inlineCode",{parentName:"li"},"ConnectOptions::pool_options()")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"ConnectOptions::sqlx_pool_options()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-orm/pull/2145"},"#2145")," Made ",(0,n.kt)("inlineCode",{parentName:"li"},"sqlx_common")," private, hiding ",(0,n.kt)("inlineCode",{parentName:"li"},"sqlx_error_to_xxx_err")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-orm/pull/2077"},"#2077"),", ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-orm/pull/2078"},"#2078")," Rework SQLite type mappings")),(0,n.kt)("h2",{id:"upgrades"},"Upgrades"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Upgrade ",(0,n.kt)("inlineCode",{parentName:"li"},"sea-query")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"0.31.0-rc.3")),(0,n.kt)("li",{parentName:"ul"},"Upgrade ",(0,n.kt)("inlineCode",{parentName:"li"},"sea-query-binder")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"0.6.0-rc.1")),(0,n.kt)("li",{parentName:"ul"},"Upgrade ",(0,n.kt)("inlineCode",{parentName:"li"},"sea-schema")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"0.15.0-rc.4"))),(0,n.kt)("h2",{id:"house-keeping"},"House Keeping"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-orm/pull/2140"},"#2140")," Improved Actix example to return 404 not found on unexpected inputs"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-orm/pull/2154"},"#2154")," Deprecated Actix v3 example"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-orm/pull/2136"},"#2136")," Re-enabled ",(0,n.kt)("inlineCode",{parentName:"li"},"rocket_okapi")," example")),(0,n.kt)("h2",{id:"release-planning"},"Release planning"),(0,n.kt)("p",null,"In the ",(0,n.kt)("a",{parentName:"p",href:"https://www.sea-ql.org/blog/2023-08-12-announcing-seaorm-0.12/"},"announcement blog post")," of SeaORM 0.12, we stated we want to reduce the frequency of breaking releases while maintaining the pace for feature updates and enhancements. I am glad to say we've accomplished that!"),(0,n.kt)("p",null,"There are still a few breaking changes planned for the 1.0 major release. After some ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-orm/discussions/2031"},"discussions")," and consideration, we decided that the next major release will be a release candidate for 1.0!"),(0,n.kt)("h2",{id:"sponsor"},"Sponsor"),(0,n.kt)("p",null,"If you feel generous, a small donation will be greatly appreciated, and goes a long way towards sustaining the organization."),(0,n.kt)("p",null,"A big shout out to our ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/sponsors/SeaQL"},"sponsors")," \ud83d\ude07:"),(0,n.kt)("h4",{id:"gold-sponsors"},"Gold Sponsors"),(0,n.kt)("a",{href:"https://osmos.io/"},(0,n.kt)("img",{src:"https://www.sea-ql.org/static/sponsors/Osmos.svg#light",width:"238"}),(0,n.kt)("img",{src:"https://www.sea-ql.org/static/sponsors/Osmos-dark.svg#dark",width:"238"})),(0,n.kt)("h4",{id:"github-sponsors"},"GitHub Sponsors"),(0,n.kt)("div",{class:"row"},(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/tugascript"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/64930104?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"Afonso Barracha")))),(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/shanesveller"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/831?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"Shane Sveller")))),(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/deansheather"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/11241812?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"Dean Sheather")))),(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/marcusbuffett"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/1834328?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"Marcus Buffett")))),(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/reneklacan"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/1935686?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"Ren\xe9 Kla\u010dan")))),(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/Iceapinan"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/2698243?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"Apinan I.")))),(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/ktanaka101"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/10344925?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"Kentaro Tanaka")))),(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/siketyan"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/12772118?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"Natsuki Ikeguchi")))),(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/mmuellersoppart"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/16762461?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"Marlon Mueller-Soppart")))),(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/gitmalong"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/18363591?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"ul")))),(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/yuly3"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/25814001?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"MasakiMiyazaki")))),(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/manfredcml"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/27536502?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"Manfred Lee")))),(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/kallydev"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/36319157?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"KallyDev")))),(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/dsgallups"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/44790295?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"Daniel Gallups")))),(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/caido"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/78991750?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"Caido")))),(0,n.kt)("div",{class:"col col--6 margin-bottom--md"},(0,n.kt)("div",{class:"avatar"},(0,n.kt)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/Coolpany-SE"},(0,n.kt)("img",{src:"https://avatars.githubusercontent.com/u/96304487?v=4"})),(0,n.kt)("div",{class:"avatar__intro"},(0,n.kt)("div",{class:"avatar__name"},"Coolpany SE"))))),(0,n.kt)("h2",{id:"rustacean-sticker-pack-"},"Rustacean Sticker Pack \ud83e\udd80"),(0,n.kt)("p",null,"The Rustacean Sticker Pack is the perfect way to express your passion for Rust.\nOur stickers are made with a premium water-resistant vinyl with a unique matte finish.\nStick them on your laptop, notebook, or any gadget to show off your love for Rust!"),(0,n.kt)("p",null,"Moreover, all proceeds contributes directly to the ongoing development of SeaQL projects."),(0,n.kt)("p",null,"Sticker Pack Contents:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Logo of SeaQL projects: SeaQL, SeaORM, SeaQuery, Seaography, FireDBG"),(0,n.kt)("li",{parentName:"ul"},"Mascot of SeaQL: Terres the Hermit Crab"),(0,n.kt)("li",{parentName:"ul"},"Mascot of Rust: Ferris the Crab"),(0,n.kt)("li",{parentName:"ul"},"The Rustacean word")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.sea-ql.org/sticker-pack/"},"Support SeaQL and get a Sticker Pack!")),(0,n.kt)("a",{href:"https://www.sea-ql.org/sticker-pack/"},(0,n.kt)("img",{style:{borderRadius:"25px"},alt:"Rustacean Sticker Pack by SeaQL",src:"https://www.sea-ql.org/static/sticker-pack-1s.jpg"})))}p.isMDXComponent=!0}}]);